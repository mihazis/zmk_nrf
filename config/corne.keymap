/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MITh
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |  -   |  ESC    |   Q   |   W   |   E   |   R   |   T   |                  |   Y   |   U   |     I     |    O    |    P    |   [    |  -  |
//        |  TAB    |   A   |   S   |   D   |   F   |   G   |                  |   H   |   J   |     K     |    L    |    ;    |    '   |
//        |  LCTL   |   Z   |   X   |   C   |   V   |   B   |                  |   N   |   M   |     ,     |    .    |    /    |    ]   |
//                            |  SHFT    |  LWR/LALT  |  RSE/SPACE |   | RSE/BSPC |  LWR/DEL    |     SFT/ENT    |
                        bindings = <            
    &trans &kp ESC    &kp Q   &kp W   &kp E   &kp R   &kp T                   &kp Y      &kp U    &kp I       &kp O    &kp P     &kp LBKT &trans
           &kp TAB    &kp A   &kp S   &kp D   &kp F   &kp G                   &kp H      &kp J    &kp K       &kp L    &kp SEMI  &kp SQT
           &kp LCTRL  &kp Z   &kp X   &kp C   &kp V   &kp B                   &kp N      &kp M    &kp COMMA   &kp DOT  &kp FSLH  &kp RBKT           
                                &kp LSHFT &lt LWR LALT &lt RSE SPACE     &lt RSE BSPC &lt LWR MINUS &mt RSHFT ENTER
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |  -   |   _     |  F1   |   F2  |   F3  |   F4  |   F5  |                  |  F6   |  F7   |    F8    |   F9  |  F10  | F11 |  -  |
//        |   =     |  1    |   2   |   3   |   4   |   5   |                  |  6    |  7    |    8     |   9   |   0   | F12 |
//        |   +     |  !    |   @   |   #   |   $   |   %   |                  |  ^    |  &    |    *     |   (   |   )   |  -  |
//                                     |  GUI      |     | SPC |                           | ENT   |       |  ALT   |
                        bindings = <
   &trans &kp UNDER      &kp F1   &kp F2 &kp F3   &kp F4   &kp F5               &kp F6    &kp F7   &kp F8   &kp F9   &kp F10  &kp F11 &mt RGUI F12   
          &mt LALT EQUAL &kp N1   &kp N2 &kp N3   &kp N4   &kp N5           &kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &kp F12
          &mt LCTRL PLUS &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &mt RCTRL MINUS
                                        &lt ADJ TAB &trans &trans           &trans &trans &lt ADJ DEL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// |     |    A+T        |   C+q    |   C+w   |   C+e   |   A+4   |    -    |                  | INS| BSPC| DEL| PGUP| SCLK| CLCK|     |
//       |    C+A+T      |   C+a    |    |    |   TAB   |     .   |    ,    |                  | LEFT | DOWN|  UP | RGHT| INS | APP |
//       |      @        |    ~     |   C+x   |   C+c   |   C+v   |   A+S   |                  | HOME| PGDN | PGUP| END| PAUS|     |
//                                            |   ADJ   |         |         |                  | ADJ |     |     |
                        bindings = <
   &trans &kp LA(TAB)     &kp LC(Q)  &kp LC(W) &kp LC(E) &kp LA(N4) &kp KP_MINUS                &kp INS      &kp BSPC &kp DEL   &kp PG_UP &kp SLCK &kp CAPS &trans
          &kp LC(LA(TAB)) &kp LC(A)  &kp PIPE &kp TAB   &kp FSLH   &kp LS(FSLH)                &kp LEFT     &kp DOWN &kp UP    &kp RIGHT &kp INS  &mt RCTRL K_APP
          &kp AT          &kp GRAVE  &kp LC(X) &kp LC(C) &kp LC(V)  &kp LA(LSHFT)               &kp HOME     &kp PG_DN   &kp PG_UP &kp END &kp PAUSE_BREAK &trans
                                               &lt ADJ RET &trans   &trans                      &lt ADJ ESC  &trans   &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
